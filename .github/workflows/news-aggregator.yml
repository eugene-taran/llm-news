name: News Aggregator Workflow
on:
  workflow_dispatch:  # Allows manual trigger
  push:
    branches: [ main ]

jobs:
  # should be possible to call with different modules, for now gemini only
  call-llm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Call Gemini API
        run: |
          echo "API Key: $GEMINI_API_KEY"
          echo "API Key length: $(echo '$GEMINI_API_KEY' | wc -c)"
          
          response=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=$GEMINI_API_KEY" \
            -H 'Content-Type: application/json' \
            -X POST \
            -d '{
              "contents": [{
                "parts": [{
                  "text": "From the past 24 hours find 3 the most popular news articles and write a short summary for each of them. Return your response in valid JSON format with the following structure: {\"articles\": [{\"title\": \"Article Title\", \"description\": \"Brief summary of the article\"}, {\"title\": \"Article Title 2\", \"description\": \"Brief summary of the second article\"}, {\"title\": \"Article Title 3\", \"description\": \"Brief summary of the third article\"}]}. Make sure to return only valid JSON, no additional text."
                }]
              }],
              "generationConfig": {
                "temperature": 0,
                "candidateCount": 1,
                "maxOutputTokens": 2048
              }
            }')
          
          echo "Raw API Response:"
          echo "$response"
          
          echo "Extracted JSON Content:"
          echo "$response" | jq -r '.candidates[0].content.parts[0].text' 2>/dev/null || echo "Failed to extract content"
          
          echo "Parsed Articles:"
          extracted_json=$(echo "$response" | jq -r '.candidates[0].content.parts[0].text' 2>/dev/null)
          if [ "$extracted_json" != "null" ] && [ "$extracted_json" != "" ]; then
            echo "$extracted_json" | jq '.articles[] | "Title: \(.title)\nDescription: \(.description)\n---"' -r 2>/dev/null || echo "Failed to parse JSON structure"
          fi
